version: 2.1
orbs:
  k8s: circleci/kubernetes@0.7.0
jobs:
  build_push:
    docker:
      - image: circleci/node:9.8.0-stretch
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
      - checkout
      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
      - restore_cache:
          keys:
            - node-{{ checksum "package-lock.json" }}
            - node-
      - run: |
          npm install
      - save_cache:
          key: node-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"
      #- save_cache:
      #    paths:
      #      - "node_modules"
      - run: |
          RELEASE_TARGET=staging
          if [[ $CIRCLE_TAG == production* ]]; then $RELEASE_TARGET=production; fi
          node_modules/grunt/bin/grunt releaseci --${RELEASE_TARGET}
      - setup_remote_docker
      - run: |
          cd dist
          docker build -t ${DOCKHUB_ORGANISATION}/binary-static:${CIRCLE_TAG:-latest} .
          if [[ $CIRCLE_TAG ]]; then docker build -t ${DOCKHUB_ORGANISATION}/binary-static:latest .; fi
      - run: |
          docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
          docker push ${DOCKHUB_ORGANISATION}/binary-static:${CIRCLE_TAG:-latest}
          if [[ $CIRCLE_TAG ]]; then docker push ${DOCKHUB_ORGANISATION}/binary-static:latest; fi
  deploy_staging:
    docker:
      - image: circleci/node:9.8.0-stretch
    steps:
      - k8s/install-kubectl
      - run: |
          kubectl --server=https://${KUBE_SERVER_IP} --insecure-skip-tls-verify=true --token=$SERVICEACCOUNT_TOKEN set image deployment/staging-binary-com staging-binary-com=${DOCKHUB_ORGANISATION}/binary-static:${CIRCLE_SHA1}
  deploy_production:
    docker:
      - image: circleci/node:9.8.0-stretch
    steps:
      - k8s/install-kubectl
      - run: |
          kubectl --server=https://${KUBE_SERVER_IP} --insecure-skip-tls-verify=true --token=$SERVICEACCOUNT_TOKEN set image deployment/production-binary-com production-binary-com=${DOCKHUB_ORGANISATION}/binary-static:${CIRCLE_SHA1}

workflows:
  version: 2
  build_push_and_deploy:
    jobs:
      - build_push:
        filters:
          tags:
            only: /.*/
      - deploy_staging:
          requires:
            - build_push
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^staging.*/
      - deploy_production:
          requires:
            - build_push
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^production.*/
